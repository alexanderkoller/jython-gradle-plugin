// First, apply the publishing plugin
buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.gradle.publish:plugin-publish-plugin:0.9.1"
  }
}

plugins {
    id "com.github.hierynomus.license" version "0.11.0"
}

apply plugin: "com.gradle.plugin-publish"
apply plugin: 'groovy'
apply plugin: 'idea'

group = 'com.hierynomus.gradle.plugins'
version = "0.3.0-SNAPSHOT"
defaultTasks 'build'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories { jcenter() }

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

configurations.compile.transitive = false

dependencies {
    compile gradleApi()
    compile "org.apache.commons:commons-compress:1.10"

    testCompile('org.spockframework:spock-core:0.7-groovy-2.0') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    testCompile 'com.xebialabs.restito:restito:0.7'
//    testCompile gradleTestKit()
}

// This disables the pedantic doclint feature of JDK8
if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

test {
  afterSuite { descriptor, result ->
    def indicator = "\u001B[32m✓\u001b[0m"
    if (result.failedTestCount > 0) {
      indicator = "\u001B[31m✘\u001b[0m"
    }
    logger.lifecycle("$indicator Test ${descriptor.name}; Executed: ${result.testCount}/\u001B[32m${result.successfulTestCount}\u001B[0m/\u001B[31m${result.failedTestCount}\u001B[0m")
  }
}

pluginBundle {
    website = "https://github.com/hierynomus/jython-gradle-plugin"
    vcsUrl = "https://github.com/hierynomus/jython-gradle-plugin.git"
    description = "Bundle Jython/Python libraries in your JAR"
    plugins {
        jythonPlugin {
            id = "com.github.hierynomus.jython"
            displayName = "Jython plugin for Gradle"
            tags = [ "jython", "python" ]
        }
    }
}


if (!System.env.containsKey("JENKINS_URL")) {
    def javaVersion = System.properties['java.version']
    if (JavaVersion.toVersion(javaVersion) != project.targetCompatibility) {
//        throw new GradleException("Expected Java version ${project.targetCompatibility} but running with $javaVersion")
    }
}
